=begin
#API Endpoints

#Deliver monetary rewards and incentives to employees, customers, survey participants, and more through the Tremendous API. For organizational tasks, like managing your organization and it's members within Tremendous, please see the Tremendous Organizational API.

The version of the OpenAPI document: 2
Contact: developers@tremendous.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Tremendous::RewardsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'RewardsApi' do
  before do
    # run before each test
    @api_instance = Tremendous::RewardsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RewardsApi' do
    it 'should create an instance of RewardsApi' do
      expect(@api_instance).to be_instance_of(Tremendous::RewardsApi)
    end
  end

  # unit tests for generate_reward_link
  # Generate a reward URL
  # Generate a redemption link for the reward identified by the &#x60;id&#x60; in the URL 
  # @param id ID of the reward
  # @param [Hash] opts the optional parameters
  # @return [GenerateRewardLink200Response]
  describe 'generate_reward_link test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_reward_token
  # Generate a reward token
  # Generate a temporary reward token identified by the &#x60;id&#x60; in the URL. These tokens are needed to render a reward when using [Tremendous Embed](https://github.com/tremendous-rewards/embed/blob/master/docs/documentation.md). The token is valid for 24 hours. 
  # @param id ID of the reward
  # @param [Hash] opts the optional parameters
  # @return [GenerateRewardToken200Response]
  describe 'generate_reward_token test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_reward
  # Retrieve single reward
  # Retrieve the reward, identified by the given &#x60;id&#x60; in the URL 
  # @param id ID of the reward that should be retrieved
  # @param [Hash] opts the optional parameters
  # @return [GetReward200Response]
  describe 'get_reward test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_rewards
  # List rewards
  # Retrieve a list of all created rewards 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset Offsets the returned list by the given number of rewards. The returned rewards are ordered (and offsetted) by their creation date (DESC).
  # @return [ListRewards200Response]
  describe 'list_rewards test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for resend_reward
  # Resend reward
  # Resends a reward, identified by the given &#x60;id&#x60; in the URL, to its recipient. 
  # @param id ID of the reward that should be resent
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'resend_reward test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
